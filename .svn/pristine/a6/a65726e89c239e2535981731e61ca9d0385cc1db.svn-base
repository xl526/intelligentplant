package com.dp.intelligentplant.controller;

import java.io.File;
import java.util.Calendar;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import com.dp.intelligentplant.domain.Equipment;
import com.dp.intelligentplant.domain.system.MediaFile;
import com.dp.intelligentplant.service.api.EquipmentService;
import com.dp.intelligentplant.service.api.MediaFileService;

@Controller
@RequestMapping("/upload")
public class UploadController {
	
	@Autowired
	private MediaFileService mediaFileService;
	
	@Autowired
	private EquipmentService equipmentService;
	
	@RequestMapping("/equipment/image")
	@ResponseBody
	public Object uploadEquipmentImage(@RequestParam("file") CommonsMultipartFile file, HttpServletRequest request) throws Exception {
		String equipmentId = request.getParameter("equipmentId");
		Calendar calendar = Calendar.getInstance();
		calendar.setTime(new Date());
		int year = calendar.get(Calendar.YEAR);
		int month = calendar.get(Calendar.MONTH) + 1;
		String filePath = "E:/upload/" + year + "/" + month;
		File newFile = new File(filePath);
		if (!newFile.isDirectory()) {
			newFile.mkdirs();
		}
		String fileName = file.getOriginalFilename();
		newFile = new File(filePath + "/" + fileName);
		file.transferTo(newFile);
		
		//存储图片数据
		MediaFile mediaFile = new MediaFile();
		mediaFile.setFileName(newFile.getName());
		mediaFile.setFilePath("/upload/" + year + "/" + month + "/");
		mediaFile.setFileType(file.getContentType());
		mediaFile.setFileSize(file.getSize());
		
		String fileUrl = request.getScheme() + "://" + request.getServerName() + ":" + request.getServerPort()
					   + mediaFile.getFilePath() + mediaFile.getFileName();
		mediaFile.setFileUrl(fileUrl);
		mediaFileService.saveMediaFile(mediaFile);
		
		//关联设备
		if (!StringUtils.isEmpty(equipmentId)) {
			Equipment equip = equipmentService.findEquipmentById(Long.parseLong(equipmentId));
			equip.setImage(mediaFile);
			equipmentService.saveOrUpdateEquipment(equip);
		}
		
		return null;
	}
}
